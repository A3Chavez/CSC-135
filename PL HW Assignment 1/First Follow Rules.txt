Rules to compute FIRST set:
1) If x is a terminal, then FIRST(x) = { ‘x’ }

2) If x-> Є, is a production rule, then add Є to FIRST(x).

3) If X->Y1 Y2 Y3….Yn is a production,
	1) FIRST(X) = FIRST(Y1)
    2) If FIRST(Y1) contains Є then FIRST(X) = { FIRST(Y1) – Є } U { FIRST(Y2) }
    3) If FIRST (Yi) contains Є for all i = 1 to n, then add Є to FIRST(X).


Rules to compute FOLLOW set:
1) FOLLOW(S) = { $ }   // where S is the starting Non-Terminal

2) If A -> pBq is a production, where p, B and q are any grammar symbols,
   then everything in FIRST(q)  except Є is in FOLLOW(B).

3) If A->pB is a production, then everything in FOLLOW(A) is in FOLLOW(B).

4) If A->pBq is a production and FIRST(q) contains Є, 
   then FOLLOW(B) contains { FIRST(q) – Є } U FOLLOW(A) 